generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customers {
  customer_id  Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  email        String   @unique(map: "email") @db.VarChar(100)
  phone_number String?  @db.VarChar(15)
  address      String?  @db.Text
  orders       orders[]
}

model orderdetail {
  orderdetail_id Int       @id @default(autoincrement())
  order_id       Int?
  product_id     Int?
  quantity       Int
  price          Decimal   @db.Decimal(10, 2)
  orders         orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "orderdetail_ibfk_1")
  products       products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "orderdetail_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  order_id     Int                  @id @default(autoincrement())
  customer_id  Int?
  order_date   DateTime?            @default(now()) @db.Timestamp(0)
  total_amount Decimal              @db.Decimal(10, 2)
  order_status orders_order_status? @default(processing)
  orderdetail  orderdetail[]
  customers    customers?           @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  payments     payments[]

  @@index([customer_id], map: "customer_id")
}

model payments {
  payment_id     Int                      @id @default(autoincrement())
  order_id       Int?
  payment_date   DateTime?                @default(now()) @db.Timestamp(0)
  payment_status payments_payment_status? @default(pending)
  amount         Decimal                  @db.Decimal(10, 2)
  orders         orders?                  @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "payments_ibfk_1")

  @@index([order_id], map: "order_id")
}

model products {
  product_id     Int           @id @default(autoincrement())
  product_name   String        @db.VarChar(100)
  price          Decimal       @db.Decimal(10, 2)
  stock_quantity Int
  orderdetail    orderdetail[]
}

enum payments_payment_status {
  pending
  completed
  failed
}

enum orders_order_status {
  processing
  completed
  cancelled
}
